package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"
	"fmt"
	"gin-auth-mongo/graph/model"
	"gin-auth-mongo/models"
	"gin-auth-mongo/models/requests"
)

// UserUpdateNickname is the resolver for the userUpdateNickname field.
func (r *mutationResolver) UserUpdateNickname(ctx context.Context, input requests.UpdateNicknameRequest) (bool, error) {
	panic(fmt.Errorf("not implemented: UserUpdateNickname - userUpdateNickname"))
}

// UserUpdateAvatar is the resolver for the userUpdateAvatar field.
func (r *mutationResolver) UserUpdateAvatar(ctx context.Context, input model.UploadAvatarRequest) (string, error) {
	panic(fmt.Errorf("not implemented: UserUpdateAvatar - userUpdateAvatar"))
}

// UserDeleteAccount is the resolver for the userDeleteAccount field.
func (r *mutationResolver) UserDeleteAccount(ctx context.Context) (bool, error) {
	panic(fmt.Errorf("not implemented: UserDeleteAccount - userDeleteAccount"))
}

// UserLogoutCurrentDevice is the resolver for the userLogoutCurrentDevice field.
func (r *mutationResolver) UserLogoutCurrentDevice(ctx context.Context, input requests.LogoutRequest) (bool, error) {
	panic(fmt.Errorf("not implemented: UserLogoutCurrentDevice - userLogoutCurrentDevice"))
}

// UserLogoutAllDevice is the resolver for the userLogoutAllDevice field.
func (r *mutationResolver) UserLogoutAllDevice(ctx context.Context) (bool, error) {
	panic(fmt.Errorf("not implemented: UserLogoutAllDevice - userLogoutAllDevice"))
}

// GetUser is the resolver for the getUser field.
func (r *queryResolver) GetUser(ctx context.Context) (*models.User, error) {
	panic(fmt.Errorf("not implemented: GetUser - getUser"))
}
